{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JRoidl\\\\Desktop\\\\mitarbeiterapp\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport api from '../services/api';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  useEffect(() => {\n    if (token) {\n      loadUser();\n    } else {\n      setLoading(false);\n    }\n  }, [token]);\n  const loadUser = async () => {\n    try {\n      const response = await api.get('/auth/me');\n      setUser(response.data);\n    } catch (error) {\n      console.error('Error loading user:', error);\n      logout();\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      const response = await api.post('/auth/login', {\n        email,\n        password\n      });\n      const {\n        token,\n        user\n      } = response.data;\n      localStorage.setItem('token', token);\n      setToken(token);\n      setUser(user);\n      toast.success('Erfolgreich angemeldet');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Anmeldung fehlgeschlagen';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const logout = async () => {\n    try {\n      await api.post('/auth/logout');\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      localStorage.removeItem('token');\n      setToken(null);\n      setUser(null);\n    }\n  };\n  const updateProfile = async data => {\n    try {\n      await loadUser();\n    } catch (error) {\n      console.error('Error updating profile:', error);\n    }\n  };\n  const resetPassword = async (token, password) => {\n    try {\n      await api.post('/auth/reset-password', {\n        token,\n        password\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Fehler beim Zurücksetzen';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const requestPasswordReset = async email => {\n    try {\n      await api.post('/auth/request-reset', {\n        email\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Fehler beim Anfordern';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const setInitialPassword = async (token, password) => {\n    try {\n      const response = await api.post('/auth/set-password', {\n        token,\n        password\n      });\n      if (response.data.token) {\n        localStorage.setItem('token', response.data.token);\n        setToken(response.data.token);\n        setUser(response.data.user);\n        return {\n          success: true,\n          autoLogin: true\n        };\n      }\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      const message = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Fehler beim Setzen des Passworts';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const validateToken = async token => {\n    try {\n      const response = await api.get(`/auth/validate-token/${token}`);\n      return response.data;\n    } catch (error) {\n      return {\n        valid: false\n      };\n    }\n  };\n  const isAdmin = () => {\n    return (user === null || user === void 0 ? void 0 : user.role) === 'admin';\n  };\n  const isStaff = () => {\n    return (user === null || user === void 0 ? void 0 : user.role) === 'staff';\n  };\n  const value = {\n    user,\n    loading,\n    login,\n    logout,\n    updateProfile,\n    resetPassword,\n    requestPasswordReset,\n    setInitialPassword,\n    validateToken,\n    isAdmin,\n    isStaff\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"/pbUqy0QsBvMqKPYubk3+KKKH8I=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","api","toast","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","setToken","localStorage","getItem","loadUser","response","get","data","error","console","logout","login","email","password","post","setItem","success","_error$response","_error$response$data","message","removeItem","updateProfile","resetPassword","_error$response2","_error$response2$data","requestPasswordReset","_error$response3","_error$response3$data","setInitialPassword","autoLogin","_error$response4","_error$response4$data","validateToken","valid","isAdmin","role","isStaff","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/JRoidl/Desktop/mitarbeiterapp/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport api from '../services/api';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst AuthContext = createContext(null);\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      loadUser();\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, [token]);\r\n\r\n  const loadUser = async () => {\r\n    try {\r\n      const response = await api.get('/auth/me');\r\n      setUser(response.data);\r\n    } catch (error) {\r\n      console.error('Error loading user:', error);\r\n      logout();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await api.post('/auth/login', { email, password });\r\n      const { token, user } = response.data;\r\n      \r\n      localStorage.setItem('token', token);\r\n      setToken(token);\r\n      setUser(user);\r\n      \r\n      toast.success('Erfolgreich angemeldet');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Anmeldung fehlgeschlagen';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await api.post('/auth/logout');\r\n    } catch (error) {\r\n      console.error('Logout error:', error);\r\n    } finally {\r\n      localStorage.removeItem('token');\r\n      setToken(null);\r\n      setUser(null);\r\n    }\r\n  };\r\n\r\n  const updateProfile = async (data) => {\r\n    try {\r\n      await loadUser();\r\n    } catch (error) {\r\n      console.error('Error updating profile:', error);\r\n    }\r\n  };\r\n\r\n  const resetPassword = async (token, password) => {\r\n    try {\r\n      await api.post('/auth/reset-password', { token, password });\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Fehler beim Zurücksetzen';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const requestPasswordReset = async (email) => {\r\n    try {\r\n      await api.post('/auth/request-reset', { email });\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Fehler beim Anfordern';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const setInitialPassword = async (token, password) => {\r\n    try {\r\n      const response = await api.post('/auth/set-password', { token, password });\r\n      \r\n      if (response.data.token) {\r\n        localStorage.setItem('token', response.data.token);\r\n        setToken(response.data.token);\r\n        setUser(response.data.user);\r\n        return { success: true, autoLogin: true };\r\n      }\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Fehler beim Setzen des Passworts';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const validateToken = async (token) => {\r\n    try {\r\n      const response = await api.get(`/auth/validate-token/${token}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      return { valid: false };\r\n    }\r\n  };\r\n\r\n  const isAdmin = () => {\r\n    return user?.role === 'admin';\r\n  };\r\n\r\n  const isStaff = () => {\r\n    return user?.role === 'staff';\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    login,\r\n    logout,\r\n    updateProfile,\r\n    resetPassword,\r\n    requestPasswordReset,\r\n    setInitialPassword,\r\n    validateToken,\r\n    isAdmin,\r\n    isStaff\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}